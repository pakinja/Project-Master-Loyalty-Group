(*<<LinearAlgebra`MatrixManipulation`;*)
(*<<MultivariateStatistics`;*)
(*<<Statistics'MultiDescriptiveStatistics'*)

(*Introduccion de parametros*)
n = 8; q = 10; F = 3; r1 = (q - 1) F/2;

(*inicializaciÃ³n*)
s = Table[i = Table[Random[Integer, {1, q}], {F}];
   j = Table[Random[Integer, {1, q}], {F}], {i, n}, {j, n}];
(*-1 en frontera*)
s[[n, All]] = 
  s[[All, n]] = s[[1, All]] = s[[All, 1]] = Table[t = -1, {u, 1, F}];
Print[MatrixForm[s]];

(*inicio ciclo*)
d = 0; h = 0; k = 0; b = 0;
tiempo = {};

While[k < 3,
  For[y = 0, y < IntegerPart[(n - 2)^2/2],
   Label[inicio];
   h++;
   ren = Random[Integer, {2, n - 1}];
   col = Random[Integer, {2, n - 1}];
   
   (*vector seleccionado*)
    a1 = s[[ren, col]];
   ran = Random[Integer, {1, 4}];
   
   (*Eleccion de vecino*)
   If[ran == 1, b1 = s[[ren, col + 1]]; ele = b1];
   If[ran == 2, g1 = s[[ren + 1, col]]; ele = g1];
   If[ran == 3, d1 = s[[ren, col - 1]]; ele = d1];
   If[ran == 4, e1 = s[[ren - 1, col]]; ele = e1];
   
   (*-1 en frontera*)
   If[ele == Table[t = -1, {u, 1, F}], Goto[inicio]];
   lij = Sum[Abs[a1[[z]] - ele[[z]]], {z, 1, F}];
   lijs = Table[a1[[z]] - ele[[z]], {z, 1, F}];
   difc = MemberQ[lijs, 0];
   
   (*If[difc\[Equal]False,Goto[inicio]];
   If[difc\[Equal]False,b++];*)
   
   (*Print[lij];*)
   (*Print[lijs];*)
   
   If[lij > r1 || difc == False, Goto[inicio]];
   If[lij > r1 || difc == False, y++];
   
   (*Probabilidad*)
   peso = 1 - (lij/((q - 1)*F));
   pe = RandomReal[];
   
   If[pe > peso, Goto[inicio]];
   (*If[pe>peso,y++];*)
   
   (*If[pe<peso,Print[True]];*)
   
   (*Print[N[peso]];
   Print[pe];*)
   
   ent = Random[Integer, {1, F}];
   p = a1[[ent]];
   cop = ele[[ent]];
   st = Sort[{p, cop}];
   
   If[Abs[p - cop] > 2, 
    nir = Random[Integer, {st[[1]] + 1, st[[2]] - 1}]];
   If[Abs[p - cop] == 2, nir = st[[1]] + 1];
   If[Abs[p - cop] == 1, nir = cop];
   If[Abs[p - cop] == 0, nir = p];
   s = ReplacePart[s, ReplacePart[a1, nir, ent], {ren, col}];
   
   If[nir == p, y++];
   If[sust != a1, b++];
   (*PrintTemporary[MatrixForm[s]];*)
   (*Print[Length[un]]*)
   ];
  d++;
  
  
  sel = Take[s, {2, n - 1}, {2, n - 1}];
  fl = Flatten[sel, 1];
  un = Union[fl];
  AppendTo[tiempo, {h, Length[un]/(n - 2)^2}];
  If[Length[un] == 1, k = 5];
  
  (*Absorbing state*)
  abst = Table[
    Sum[Abs[s[[i, j]][[v]] - s[[i, j + 1]][[v]]], {v, 1, F}], {i, 2, 
     n - 1}, {j, 2, n - 2}];
  abst1 = 
   Table[Sum[Abs[s[[i, j]][[v]] - s[[i + 1, j]][[v]]], {v, 1, F}], {i,
      2, n - 2}, {j, 2, n - 1}];
  
  abst2 = 
   Table[Abs[s[[i, j]][[v]] - s[[i, j + 1]][[v]]], {v, 1, F}, {i, 2, 
     n - 1}, {j, 2, n - 2}];
  abst3 = 
   Table[Abs[s[[i, j]][[v]] - s[[i + 1, j]][[v]]], {v, 1, F}, {i, 2, 
     n - 2}, {j, 2, n - 1}];
  
  ver = Table[s[[i, j]] - s[[i + 1, j]], {i, 2, n - 2}, {j, 2, n - 1}];
  hor = Table[s[[i, j]] - s[[i, j + 1]], {i, 2, n - 1}, {j, 2, n - 2}];
  uni = Flatten[Join[ver, hor], 1];
  ext = Flatten[DeleteCases[uni, Table[i = 0, {i, 1, F}]]];
  GG = MemberQ[ext, 0];
  
  cor1 = {s[[2, 2]] - s[[2, 3]]};
  cor21 = {s[[2, 2]] - s[[3, 2]]};
  cor12 = {s[[n - 1, 2]] - s[[n - 2, 2]]};
  cor22 = {s[[n - 1, 2]] - s[[n - 1, 3]]};
  cor31 = {s[[2, n - 1]] - s[[2, n - 2]]};
  cor32 = {s[[2, n - 1]] - s[[3, n - 1]]};
  cor41 = {s[[n - 1, n - 1]] - s[[n - 2, n - 1]]};
  cor42 = {s[[n - 1, n - 1]] - s[[n - 1, n - 2]]};
  cor = Flatten[
    Join[{cor1}, {cor21}, {cor12}, {cor22}, {cor31}, {cor32}, \
{cor41}, {cor42}], 1];
  dlc = Flatten[DeleteCases[cor, Table[i = 0, {i, 1, F}]]];
  
  unir = Join[ext, dlc];
  
  (*abst4=Table[Abs[s[[i,j]][[v]]-s[[i,j+1]][[v]]]\[Equal]0,{v,1,
  F},{i,2,n-1},{j,2,n-2}];
  Print[abst4];*)
  
  (*abstp=Table[s[[i,j]],{i,2,n-1},{j,2,n-1}];
  dom=Union[Flatten[Union[abstp],1]];
  domt=Flatten[Differences[dom]];*)
  
  (*Print[dom];
  Print[domt];*)
  
  (*Print[abst4];
  Print[abst5];*)
  
  abstate = Flatten[abst];
  abstate1 = Flatten[abst1];
  abstate2 = Flatten[abst2];
  abstate3 = Flatten[abst3];
  
  AA = Select[abstate, # == 0 &];
  BB = Select[abstate1, # == 0 &];
  CC = Select[abstate, # > r1 &];
  DD = Select[abstate1, # > r1 &];
  EE = MemberQ[abstate2, 0];
  FF = MemberQ[abstate3, 0];
  HH = MemberQ[unir, 0];
  (*GG=MemberQ[domt,0];*)
  
  (*Print[AA];
  Print[BB];*)
  
  If[Length[AA] + Length[CC] == Length[abstate] && 
    Length[BB] + Length[DD] == Length[abstate1], k = 5];
  If[Length[CC] == Length[abstate] && Length[DD] == Length[abstate1], 
   k = 5];
  If[Length[AA] == Length[abstate] && Length[BB] == Length[abstate1], 
   k = 5];
  If[EE == False, k = 5];
  If[FF == False, k = 5];
  If[HH == False, k = 5];
  (*If[GG==False,k=5];*)
  
  (*Print[Length[abstate2]];
  Print[abstate2];
  Print[Union[abstate2]];*)
  ];
Print[MatrixForm[s]];
